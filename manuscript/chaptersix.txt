# **6. Launch a bastion &amp; run database migrations**

A bastion (also called jump box) is a temporary EC2 instance that we will place in a public subnet of our VPC. It will enable us to SSH into it from outside the VPC and from there still being able to access our instances (including database instances) in private subnets. When creating the bastion, make sure to associate to it the SG allowing access to the database.


![](code/chaptersix1.rb)


C> `Launch one bastion, to be deleted once we&rsquo;re done.`


![](code/chaptersix2.rb)


C> `You&rsquo;re now connected to an instance inside your VPC private subnets without copying keys around`


![](code/chaptersix3.rb)


The bastion can also be a host for a SSH tunnel between our machine and our public subnet so we can connect a local mysql/pgsql client to our remote database. Below is an example for PostgreSQL:


![](code/chaptersix4.rb)


Back to our database migrations that we just ran. Here&rsquo;s how it looks now when connecting to the load balancer:


![Laravel served through our load balancer URL](images/fig05.png)


Yay! Our application is now served through our load balancer and our EC2 and database instances are running from the safety of a private subnet. The next step is to point our domain name to our load balancer.